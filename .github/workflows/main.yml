name: Build

on: 
  push:
  release:
    types: [published]
  pull_request:
    branches:
    - master
    
jobs:
    build:
      name: Build
      env:
        NUPKG_MAJOR: 0.1
      runs-on: macos-latest
      outputs:
        manifest_json: ${{ steps.manifests.outputs.manifest_json }}
        manifest_dev_json: ${{ steps.manifests.outputs.manifest_dev_json }}
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.100
      - name: Build and Pack - Release
        if: github.event_name == 'release'
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          mkdir ./output
          mkdir ./artifacts
          dotnet build --configuration Release ./MauiCheck.sln
          dotnet pack --output ./artifacts -p:PackageVersion=$VERSION --configuration Release ./MauiCheck/MauiCheck.csproj
      - name: Load Check Manifests
        id: manifests
        run: |
          manifestjson=`cat ./manifests/maui.manifest.json`
          devmanifestjson=`cat ./manifests/maui-dev.manifest.json`
          echo "::set-output name=manifest_json::$manifestjson"
          echo "::set-output name=manifest_dev_json::$devmanifestjson"
      - name: Build and Pack - CI
        if: github.event_name != 'release'
        run: |
          VERSION=$NUPKG_MAJOR-ci$GITHUB_RUN_ID
          mkdir ./output
          mkdir ./artifacts
          dotnet build --configuration Release ./MauiCheck.sln
          dotnet pack --output ./artifacts -p:PackageVersion=$VERSION --configuration Release ./MauiCheck/MauiCheck.csproj
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: NuGet
          path: ./artifacts

    testwin:
      name: Use Tool - Windows
      needs: build
      runs-on: windows-latest
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v1
          with:
            name: NuGet
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 3.1.100
        - name: Install and Run Tool
          shell: pwsh
          run: |
            $ProgressPreference = 'SilentlyContinue'
            Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
            & .\dotnet-install.ps1 -Version $env:DotNetVersion -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
            & dotnet --list-sdks
            & dotnet tool install --global --add-source NuGet\ redth.net.maui.check
            & maui-check --fix --non-interactive --verbose

    testmac:
      name: Use Tool - MacOS
      needs: build
      runs-on: macos-latest
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v1
          with:
            name: NuGet
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 3.1.100
        - name: Install and Run Tool
          run: |
            dotnetVersion=${{fromJson(needs.build.outputs.manifest_json).check.dotnet.sdks[0].version}}
            dotnetDevVersion=${{fromJson(needs.build.outputs.manifest_dev_json).check.dotnet.sdks[0].version}}
            export PATH="/usr/local/share/dotnet/:~/.dotnet/tools:$PATH"
            curl -L https://raw.githubusercontent.com/dotnet/install-scripts/7a9d5dcab92cf131fc2d8977052f8c2c2d540e22/src/dotnet-install.sh > dotnet-install.sh
            sh dotnet-install.sh --version $dotnetVersion --install-dir $DOTNET_ROOT --verbose
            sh dotnet-install.sh --version $dotnetDevVersion --install-dir $DOTNET_ROOT --verbose
            dotnet --list-sdks
            dotnet tool install --global --add-source ./NuGet/ redth.net.maui.check
            maui-check --fix --non-interactive --verbose

    publish:
      name: Publish
      needs:
        - testmac
        - testwin
      runs-on: windows-latest
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v1
          with:
            name: NuGet
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 3.1.100
        - name: Setup NuGet
          uses: nuget/setup-nuget@v1
          with:
            nuget-api-key: ${{ secrets.NUGET_API_KEY }}
            nuget-version: 'latest'
        - name: Push NuGet
          if: github.event_name == 'release'
          run: |
            nuget push NuGet\*.nupkg -Source https://api.nuget.org/v3/index.json -ApiKey ${{ secrets.NUGET_ORG_API_KEY }} -SkipDuplicate
        - name: Push GPR
          if: github.event_name != 'release'
          run: |
            nuget sources add -Name "GPR" -Source "https://nuget.pkg.github.com/Redth/index.json" -UserName Redth -Password ${{ secrets.GITHUB_TOKEN }}
            nuget setApiKey ${{ secrets.NUGET_API_KEY }} -Source "GPR"
            nuget push NuGet\*.nupkg -Source "GPR" -SkipDuplicate
